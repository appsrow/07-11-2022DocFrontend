@import "../../../../assets/css/core/variables/shadow";
@import "../../admin.component.scss";

.user-profile{
    .userinformation {
        display: flex;
        align-items: center;
        .user-image {
            width: 150px;
            max-width: 100%;
            height: 150px;
            img {
                border-radius: 50%;
                width: auto;
                height: 100%;
            }
        }
        .user-content {
            text-align: left;
            width: calc(100% - 150px);
            h3 {
                font-weight: 500;
            }
            .info {
                display: flex;
                align-items: center;
                margin-bottom: 0.7rem;
                padding-left: 25px;
                position: relative;
                i {
                    width: 20px;
                    text-align: center;
                    margin-left: -25px;
                    color: #3f8cff;
                }
            }
            .profile_status {
                display: flex;
                align-items: flex-end;
                flex-direction: column;
                width: 100%;
                height: 100%;
                justify-content: center;
            }
        }
    }
}

@mixin can-toggle-branding(
  $can-toggle-off-color: #0b0f1b, 
  $can-toggle-on-color: #3f8cff,
  $can-toggle-inactive-text: rgba(white, 0.8),
  $can-toggle-transition: cubic-bezier(0,1,0.5,1)
) {  
  input[type="checkbox"] {
    &[disabled] ~ label {
      color: rgba($can-toggle-off-color, 0.5);
    }    
    &:focus ~ label, &:hover ~ label {
      .can-toggle__switch {
        background-color: $can-toggle-off-color;
        &:after { color: darken($can-toggle-off-color, 10%); }
      }
    }
    &:hover ~label { color: darken($can-toggle-off-color, 5%); }
    &:checked {
      ~ label {
        &:hover { color: darken($can-toggle-on-color, 3%); }
        
        .can-toggle__switch {
          background-color: lighten($can-toggle-on-color, 5%);
          &:after { color: darken($can-toggle-on-color, 5%); }
        }
      }
      
      &:focus, &:hover {
        ~ label {
          .can-toggle__switch {
            background-color: $can-toggle-on-color;
            &:after { color: darken($can-toggle-on-color, 10%); }
          }
        } 
      }
    }
  }
  
  label {
    .can-toggle__label-text { flex: 1; }
    .can-toggle__switch {
      transition: background-color 0.3s $can-toggle-transition;
      background: lighten($can-toggle-off-color, 5%);
      &:before { color: $can-toggle-inactive-text; }
      &:after {
        // Autoprefixer choked here, so making the prefixes explicit
        -webkit-transition: -webkit-transform 0.3s $can-toggle-transition;
        transition: transform 0.3s $can-toggle-transition;
        color: $can-toggle-off-color; 
      }
    }
  }
}

@mixin can-toggle-appearance 
( 
  $can-toggle-width: 180px,
  $can-toggle-height: 35px,
  $can-toggle-border-radius: 100px,
  $can-toggle-offset: 2px,
  $can-toggle-label-font-size: 1rem,
  $can-toggle-switch-font-size: 0.8rem,
  $can-toggle-shadow: 0 3px 3px rgba(black, 0.4)
){
  $can-toggle-switch-width: $can-toggle-width/2;
  input[type="checkbox"] {
    &:focus ~ label, &:hover ~ label {
      .can-toggle__switch {
        &:after { box-shadow: $can-toggle-shadow; } 
      }
    }
    &:checked {
      ~ label {
        .can-toggle__switch {
          &:after { transform: translate3d($can-toggle-width - ($can-toggle-switch-width + $can-toggle-offset),0,0); }  
        }
      }
      &:focus, &:hover {
        ~ label {
          .can-toggle__switch { &:after { box-shadow: $can-toggle-shadow; } }
        } 
      }
    }
  }

  label {
    font-size: $can-toggle-label-font-size;
    .can-toggle__switch {
      height: $can-toggle-height;
      flex: 0 0 $can-toggle-width;
      border-radius: $can-toggle-border-radius;
      &:before {
        left: $can-toggle-width/2;
        font-size: $can-toggle-switch-font-size; 
        line-height: $can-toggle-height;
        width: $can-toggle-width/2;
        padding: 0 12px;
      }
      &:after {
        top: $can-toggle-offset; left: $can-toggle-offset;
        border-radius: $can-toggle-border-radius/2;
        width: $can-toggle-switch-width - $can-toggle-offset; 
        line-height: $can-toggle-height - ($can-toggle-offset*2);
        font-size: $can-toggle-switch-font-size;
      }
      &:hover {
        &:after { box-shadow: $can-toggle-shadow; }
        cursor: pointer;
      }
    } 
  }
}
@include can-toggle-branding; 
@include can-toggle-appearance; 
.can-toggle {
    position: relative;
    display: inline-block;
    float: right;
    width: 100%;
    text-align: right;
    margin-bottom: 1.5rem;
    *, *:before, *:after { box-sizing: border-box; }  
    input[type="checkbox"] {
        opacity: 0;
        position: absolute;
        top: 0; left: 0;
        &[disabled] ~ label {
        pointer-events: none;
        .can-toggle__switch { opacity: 0.4; }
        }
        &:checked {
        ~ label {
            .can-toggle__switch {
            &:before {
                content: attr(data-unchecked);
                left: 0;
            }
            &:after {
                content: attr(data-checked);
            }  
            }
        }
        &:focus, &:hover {
            ~ label {
            } 
        }
        }
    }
    label {
        user-select: none;
        position: relative;
        display: flex;
        align-items: center;
        width: 180px;
        float: right;
        .can-toggle__label-text { 
        flex: 1;
        padding-left: 32px;
        }
        .can-toggle__switch {
        position: relative;
        &:before {
            content: attr(data-checked);
            position: absolute;
            top: 0;
            text-transform: uppercase;
            text-align: center;
        }
        &:after {
            content: attr(data-unchecked);
            position: absolute;
            z-index: 5;
            text-transform: uppercase;
            text-align: center;
            background: white;
            transform: translate3d(0,0,0);
        }
        } 
    }
}
.bootom_btn {
    width: 100%;
}

@media only screen and (max-width: 991px) {
    .user-profile {
        .userinformation {
            .user-content {
                .can-toggle {
                    float: none;
                    margin: 1rem auto 0 0;
                    width: auto;
                }
            }
        }
    }
}

@media only screen and (max-width: 767px) {
    .user-profile {
        .userinformation {
            flex-direction: column;
            .user-content {
                width: calc(100% - 0px);
                h3 {
                    text-align: center;
                    margin-top: 1rem;
                }
                .can-toggle {
                    float: none;
                    margin: 1rem auto 0;
                    width: auto;
                }
            }
        }
    }
}